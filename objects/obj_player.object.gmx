<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>default_speed = 300; // In pixels per second.
kick_displacement = 5; // In pixels

number_of_fragments_player_splits_into = 9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
 * Movement code
 */
var current_speed = default_speed / room_speed;

if (keyboard_check(ord('W'))) {
    y = y - current_speed;
}
if (keyboard_check(ord('S'))) {
    y = y + current_speed;
}
if (keyboard_check(ord('A'))) {
    x = x - current_speed;
}
if (keyboard_check(ord('D'))) {
    x = x + current_speed;
}

/*
 * Facing
 */
image_angle = point_direction(x, y, mouse_x, mouse_y);

/*
 * Firing
 */
if (mouse_check_button(mb_left)) {
    var new_bullet = instance_create(x, y, obj_bullet);
    new_bullet.direction = image_angle;
    new_bullet.image_angle = image_angle;
    new_bullet.speed = 600 / room_speed;
    
    var kick_direction = (image_angle + 180) % 360;    
    x = x + lengthdir_x(kick_displacement, kick_direction);
    y = y + lengthdir_y(kick_displacement, kick_direction);
    
    audio_play_sound(snd_bullet_shot, 1, false);
}

/*
 * Stay inside the room
 */
if (x &lt; 0) x = 0;
if (x &gt; room_width) x = room_width;
if (y &lt; 0) y = 0;
if (y &gt; room_height) y = room_height;

/*
 * Death
 */
var enemy_touching_me = instance_place(x, y, obj_enemy);
if (enemy_touching_me != noone) {
   explode_into_some_chunks(number_of_fragments_player_splits_into, obj_player_fragment);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
